apply plugin: 'maven-publish'
apply plugin: 'signing'

group = publishedGroupId
version = versionName

task androidSourcesJar(type: Jar) {
	archiveClassifier.set('sources')
	from android.sourceSets.main.java.srcDirs
}

artifacts {
	archives androidSourcesJar
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
	Properties p = new Properties()
	p.load(new FileInputStream(secretPropsFile))
	p.each { name, value ->
		ext[name] = value
	}
}

publishing {
	publications {
		release(MavenPublication) {
			groupId group
			artifactId project.archivesBaseName
			version version

			if (project.plugins.findPlugin("com.android.library")) {
				artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
			} else {
				artifact("$buildDir/libs/${project.getName()}-${version}.jar")
			}

			artifact androidSourcesJar

			pom {
				name = libraryName
				description = libraryDescription
				url = siteUrl

				licenses {
					license {
						name = licenseName
						url = licenseUrl
					}
				}
				developers {
					developer {
						id = developerId
						name = developerName
						email = developerEmail
					}
				}
				scm {
					connection = gitUrl
					developerConnection = gitUrl
					url = gitUrl
				}
				withXml {
					def dependenciesNode = asNode().appendNode('dependencies')

					project.configurations.implementation.allDependencies.each {
						def dependencyNode = dependenciesNode.appendNode('dependency')
						dependencyNode.appendNode('groupId', it.group)
						dependencyNode.appendNode('artifactId', it.name)
						dependencyNode.appendNode('version', it.version)
					}
				}
			}
		}
	}
	repositories {
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

			credentials {
				username ossrhUsername
				password ossrhPassword
			}
		}
	}
}

signing {
	sign publishing.publications
}

